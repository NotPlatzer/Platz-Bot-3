{"version":3,"file":"CustomPlugin.js","sourceRoot":"","sources":["../../src/struct/CustomPlugin.ts"],"names":[],"mappings":";;;AAAA,wBAA2B;AAC3B,0BAAgC;AAIhC,oDAAoD;AAEpD;;;;GAIG;AACH,MAAsB,YAAa,SAAQ,SAAM;IAAjD;;QACE;;;;;;;;;;;;WAYG;QACH;;;;;;;;;WASG;QACH,SAAI,GAAG,cAAU,CAAC,MAAM,CAAC;IAU3B,CAAC;CAAA;AAlCD,oCAkCC","sourcesContent":["import { Plugin } from \".\";\nimport { PluginType } from \"..\";\nimport type { CustomPluginPlayOptions } from \"..\";\nimport type { VoiceBasedChannel } from \"discord.js\";\n\n// TODO: Clean parameters on the next major version.\n\n/**\n * Custom Plugin\n * @extends Plugin\n * @abstract\n */\nexport abstract class CustomPlugin extends Plugin {\n  /**\n   * @typedef {Object} CustomPluginPlayOptions\n   * @param {Discord.GuildMember} [member] Requested user\n   * @param {Discord.BaseGuildTextChannel} [textChannel] Default {@link Queue#textChannel}\n   * @param {boolean} [skip=false]\n   * Skip the playing song (if exists) and play the added song/playlist if `position` is 1.\n   * If `position` is defined and not equal to 1, it will skip to the next song instead of the added song\n   * @param {number} [position=0] Position of the song/playlist to add to the queue,\n   * <= 0 to add to the end of the queue.\n   * @param {boolean} [unshift=false] (DEPRECATED) Add the song/playlist to the beginning of the queue\n   * (after the playing song if exists)\n   * @param {*} [metadata] Metadata\n   */\n  /**\n   * This method will be executed if the url is validated.\n   * @param {Discord.BaseGuildVoiceChannel} voiceChannel The voice channel will be joined\n   * @param {string} song Validated url\n   * @param {CustomPluginPlayOptions} [options] Optional options\n   * @returns {Promise<void>}\n   * @abstract\n   * @method play\n   * @memberof CustomPlugin#\n   */\n  type = PluginType.CUSTOM;\n  /**\n   * This method will be executed if the url is validated.\n   * @param {Discord.BaseGuildVoiceChannel} voiceChannel The voice channel will be joined\n   * @param {string} song Validated url\n   * @param {CustomPluginPlayOptions} [options] Optional options\n   * @returns {Promise<void>}\n   * @abstract\n   */\n  abstract play(voiceChannel: VoiceBasedChannel, song: string, options: CustomPluginPlayOptions): Promise<void>;\n}\n"]}